<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Think More</title>
    <description>Personal thoughts and work log in software development.
</description>
    <link>http://wao.github.io/blog/</link>
    <atom:link href="http://wao.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 02 Feb 2016 17:31:46 +0800</pubDate>
    <lastBuildDate>Tue, 02 Feb 2016 17:31:46 +0800</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Using rvm script in ubuntu keyboard shortcuts</title>
        <description>&lt;p&gt;Recently, I try to using ubuntu keyboard shortcuts to launch my ruby scripts.&lt;/p&gt;

&lt;p&gt;Surprisingly, I found the script seemed hadn’t been excuted at all. After some research, I realize that the root cause is that I write ruby and run it with rvm.&lt;/p&gt;

&lt;p&gt;To use rvm, some code line needed to be added into &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt;. However, scripts launched by keybord shortcuts or &lt;code class=&quot;highlighter-rouge&quot;&gt;ALT+F2&lt;/code&gt; knows nothing about rvm. So your ruby script commonly failed due to require gem failures. For example, you use gem &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; and using &lt;code class=&quot;highlighter-rouge&quot;&gt;gem install main&lt;/code&gt; in console. This gem is installed in rvm managered gem path. However, ruby launched by keyboard shortcuts only run system ruby and don’t have gem &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; installed. To fix this problem, I found that &lt;code class=&quot;highlighter-rouge&quot;&gt;rvm wrapper&lt;/code&gt; can rescure us. I used following command &lt;code class=&quot;highlighter-rouge&quot;&gt;rvm wrapper 2.2.1@defrvm defrv&lt;/code&gt;. This command will create a &lt;code class=&quot;highlighter-rouge&quot;&gt;defrvm_ruby&lt;/code&gt; script. Then in keybord shutcuts using &lt;code class=&quot;highlighter-rouge&quot;&gt;path/to/defrvm_ruby path/to/your_script&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;path/to/your_script&lt;/code&gt;. Then script can correctly find its dependencies.&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Feb 2016 00:00:00 +0800</pubDate>
        <link>http://wao.github.io/blog/2016/02/02/using-rvm-in-ubuntu-keyboard-shortcut.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2016/02/02/using-rvm-in-ubuntu-keyboard-shortcut.html</guid>
        
        <category>ubuntu</category>
        
        <category>ruby</category>
        
        <category>rvm</category>
        
        
      </item>
    
      <item>
        <title>Find who sent SIGKILL to my process on Android?</title>
        <description>&lt;p&gt;Recently, I have to resolve a bug which I found my service is misteriously killed. No other clue, just a log line: “Process xxxxx died”.&lt;/p&gt;

&lt;h2 id=&quot;tombstone-and-debuggerd&quot;&gt;Tombstone and Debuggerd&lt;/h2&gt;

&lt;p&gt;First, I check the tombstones log and susperious to find nothing. After several digging in internet and source code of android, I found following fact:&lt;/p&gt;

&lt;p&gt;1, Tombstone log is generated by debuggered, nothing related to common core-dump of linux. After launching, debuggered listens to a unix-domain path.
2, From folloing post &lt;a href=&quot;http://t2koba.blogspot.com/2011/05/debuggerd-of-android.html&quot;&gt;debuggerd of Android&lt;/a&gt;, android uses a trick to let debuggered ptrace crashed app and dump tobmstones. The secrete is in file &lt;code class=&quot;highlighter-rouge&quot;&gt;bionic/linker/debugger.c&lt;/code&gt;. Function &lt;code class=&quot;highlighter-rouge&quot;&gt;debugger_init()&lt;/code&gt; will use sigaction to register handler to handle serval signal and notify debuggered in signal handler.&lt;/p&gt;

&lt;p&gt;From above facts, we can conclude following result:&lt;/p&gt;

&lt;p&gt;1, If some application register a new signal handler, without call prev signal handler, the tomestone dump function will be brokened.
2, Since SIGKILL can’t be handled by &lt;code class=&quot;highlighter-rouge&quot;&gt;signal_action&lt;/code&gt;, SIGKILL will never generate tombstone log.&lt;/p&gt;

&lt;p&gt;Now, I understand that my process is killed by SIGKILL.&lt;/p&gt;

&lt;h2 id=&quot;sigkill-in-kernel&quot;&gt;Sigkill in kernel&lt;/h2&gt;

&lt;p&gt;In linux kernel, in file &lt;code class=&quot;highlighter-rouge&quot;&gt;kernel/signal.c&lt;/code&gt;, function &lt;code class=&quot;highlighter-rouge&quot;&gt;send_signal&lt;/code&gt; is used to send signal from one process to another process. I add following code to dump log:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
       if( sig == 9 ){
        printk( KERN_ERR &quot;SIGKILL send from %d to %d&quot;, current-&amp;gt;pid, t-&amp;gt;pid );
        dump_stack();
    }
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;sigkill-in-android&quot;&gt;Sigkill in android&lt;/h2&gt;

&lt;p&gt;I also research in android, all the kill code finally call &lt;code class=&quot;highlighter-rouge&quot;&gt;android_os_killProcessGroup()&lt;/code&gt; to kill process.&lt;/p&gt;

&lt;p&gt;I also found, if android found that one binder is dead, it’ll send a SIGKILL to the process even if process is already killed. I was confused here for almost 3 days thought that my process is killed due to binder dead. Finally, from sigkill log in kernel, I found that my process is kill by a third-part library in my own process, and android send SIGKILL to my process later, which mislead me.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Dec 2015 18:36:29 +0800</pubDate>
        <link>http://wao.github.io/blog/2015/12/11/find-who-send-SIGKILL-to-my-process-in-android.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2015/12/11/find-who-send-SIGKILL-to-my-process-in-android.html</guid>
        
        <category>androiddev</category>
        
        
      </item>
    
      <item>
        <title>Install Ubuntu 15.10 in MSI GE62-2QD</title>
        <description>&lt;p&gt;Recently, I bought a new MSI GE62 2QD Notebook which has an Intel i7-5700HQ and an Nvdia GTX960M. At first day I got it, I had trouble to install Ubuntu 15.10 on it. I even can’t boot up from LiveCD and enter installer GUI. I googled it and found some blogs about old model or old ubuntu version. I tried their advice and has no effective. After some reseach, I realized that the problem is caused by new Nvidia GTX960M. It is obvious that linux default driver for nvdia card, nouveau has big problem with it. Luckly, all the Intel platform notebook has an embed Intel Display card which Ubuntu support quite perfect. All I need to to is disable nouveau before LiveCD bootup.&lt;/p&gt;

&lt;p&gt;Following the advice of &lt;a href=&quot;http://forums.debian.net/viewtopic.php?t=79797&quot;&gt;this article&lt;/a&gt;, I can launcher intaller and install Ubuntu 15.10. The following same procdure at my Ubuntu first boot phase and successfully boot system.&lt;/p&gt;

&lt;p&gt;After that, modify file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/default/grub&lt;/code&gt;, change line&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    GRUB_CMDLINE_LINUX=&quot;&quot; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    GRUB_CMDLINE_LINUX=&quot;nouveau.modeset=0&quot; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and run command&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    sudo update-grub
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After that, I can enjoy my new notebook.&lt;/p&gt;

&lt;p&gt;FYI, the method to disable nouveau is following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;At the grub screen, press the up or down arrow keys to select the grub stanza/entry in question.&lt;/li&gt;
  &lt;li&gt;Press the “E” key.&lt;/li&gt;
  &lt;li&gt;An editor will open up that will allow you to temporarily change the grub options for the next boot.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Press the down arrow key and move the cursor to the line after the line with the kernel options. The line with the kernel options might look something like:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; linux   /boot/vmlinuz-3.2.0-2-486 root=UUID=1cfa3078-b27d-471a-a476-e948f947f058 ro  quiet
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Press the left/right arrow keys to position the cursor at the end of kernel options line.&lt;/li&gt;
  &lt;li&gt;Type in &lt;code class=&quot;highlighter-rouge&quot;&gt;nouveau.modeset=0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Press either the F10 key or Ctrl+X to start the boot process.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 11 Dec 2015 18:36:29 +0800</pubDate>
        <link>http://wao.github.io/blog/2015/12/11/install-ubuntu-15.10-in-MSI-GE62-2QD.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2015/12/11/install-ubuntu-15.10-in-MSI-GE62-2QD.html</guid>
        
        <category>Ubuntu</category>
        
        
      </item>
    
      <item>
        <title>Paring Raboo Blueooth Mouse with Ubuntu 15.10</title>
        <description>&lt;p&gt;Yesterday, I purchased a Rapoo Bluetooth Mouse 6010B and tried to work with my Ubuntu 15.10. Sadly, it can be paried, but ubuntu told me “Connection failed”. As a programmer knowning little about bluetooth, I used &lt;code class=&quot;highlighter-rouge&quot;&gt;hcidump&lt;/code&gt; to capture a log and found nothing. Ubuntu seems pair with mouse successful and after a bunch of SDP negotitation, disconnect with mouse with no obvious reason.&lt;/p&gt;

&lt;p&gt;After that, I tried the mouse with my android phone, everything works perfect.&lt;/p&gt;

&lt;p&gt;After Google a lot, someone mentions Ubuntu 15.10 has some problem of bluetooth with its Bluetooth GUI, suggests that command line may work. So I tried &lt;code class=&quot;highlighter-rouge&quot;&gt;bluetoothctl&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
scan on
#Found the mac with your mouse here
scan off
pair 00:11:xx:xx  #Pair with your mouse
connect 00:11:xx:xx 
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Everything goes OK. After that, I tried powerdown/poweron bluetooth mouse, everythings is ok.&lt;/p&gt;

</description>
        <pubDate>Fri, 11 Dec 2015 18:36:29 +0800</pubDate>
        <link>http://wao.github.io/blog/2015/12/11/Paring-Rabool-bluetooth-mouse-with-Ubuntu-15.10.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2015/12/11/Paring-Rabool-bluetooth-mouse-with-Ubuntu-15.10.html</guid>
        
        <category>Bluetooth</category>
        
        <category>Ubuntu</category>
        
        
      </item>
    
      <item>
        <title>Using long with std::inner_product</title>
        <description>&lt;p&gt;Today, I have write a problem which using &lt;code class=&quot;highlighter-rouge&quot;&gt;std::inner_product&lt;/code&gt; to caculate inner product of two &lt;code class=&quot;highlighter-rouge&quot;&gt;std::vector&amp;lt;int&amp;gt;&lt;/code&gt;. The code is like followings:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int msp( vector&amp;lt;int&amp;gt;&amp;amp; left, vector&amp;lt;int&amp;gt;&amp;amp; right )
    return inner_product( left.begin(), left.end(), right.begin(), 0 );
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, I meet overflow problem. I have tried to change from &lt;code class=&quot;highlighter-rouge&quot;&gt;std::vector&amp;lt;int&amp;gt;&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;std::vector&amp;lt;long long int&amp;gt;&lt;/code&gt;, but it doesn’t work.&lt;/p&gt;

&lt;p&gt;After several trials, I have found if I change 0 to &lt;code class=&quot;highlighter-rouge&quot;&gt;0L&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;0LL&lt;/code&gt;, the overflow problem is fixed. I have do some research, and, found that the prototype of &lt;code class=&quot;highlighter-rouge&quot;&gt;inner_product&lt;/code&gt; is like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;template&amp;lt; class InputIt1, class InputIt2, class T &amp;gt;
T inner_product( InputIt1 first1, InputIt1 last1, InputIt2 first2, T value );
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see, the type T is determined by type of parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;, so to force &lt;code class=&quot;highlighter-rouge&quot;&gt;inner_product&lt;/code&gt; using &lt;code class=&quot;highlighter-rouge&quot;&gt;long&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;long long int&lt;/code&gt;, we must specify that type of value by using &lt;code class=&quot;highlighter-rouge&quot;&gt;0L&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;0LL&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;return inner_product( left.begin(), left.end(), right.begin(), 0LL );
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 18 Mar 2015 18:36:29 +0800</pubDate>
        <link>http://wao.github.io/blog/2015/03/18/Using-long-with-std-inner-product.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2015/03/18/Using-long-with-std-inner-product.html</guid>
        
        <category>C++</category>
        
        
      </item>
    
      <item>
        <title>Using androidannotation with M2E</title>
        <description>&lt;p&gt;Install ADT&lt;/p&gt;

&lt;p&gt;Install m2e-android: Android for Maven Eclipse Update Site:	http://rgladwell.github.io/m2e-android/updates/	
It will also install m2e itself.&lt;/p&gt;

&lt;p&gt;Install mvn-apt: Maven Integration for Eclipse JDT APT:	http://download.jboss.org/jbosstools/updates/m2e-extensions/m2e-apt&lt;/p&gt;

&lt;p&gt;Create a maven android project.&lt;/p&gt;

&lt;p&gt;Add following dependencies:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.androidannotations&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;androidannotations&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;3.2&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.androidannotations&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;androidannotations-api&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;3.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And add following in build/pluginManager&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;     &amp;lt;plugin&amp;gt;
        &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;3.1&amp;lt;/version&amp;gt;
        &amp;lt;configuration&amp;gt;
            &amp;lt;source&amp;gt;1.6&amp;lt;/source&amp;gt;
            &amp;lt;target&amp;gt;1.6&amp;lt;/target&amp;gt;
        &amp;lt;/configuration&amp;gt;
    &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Configure mvn-apt: Using delegated to mvn-processor-plugin. It is important, since default eclipse apt process is broken with m2e.&lt;/p&gt;

</description>
        <pubDate>Tue, 16 Dec 2014 00:00:00 +0800</pubDate>
        <link>http://wao.github.io/blog/2014/12/16/using-androidannotations-with-m2e.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2014/12/16/using-androidannotations-with-m2e.html</guid>
        
        <category>Android</category>
        
        <category>Maven</category>
        
        
      </item>
    
      <item>
        <title>如何在ubuntu 14.10下root GT-I9502 Samsung Galaxy S4 4.4.2 联通双卡版本</title>
        <description>&lt;p&gt;最近,把自己的Galaxy S4升级到4.4.2，安装了Google Play Store和系统服务,系统环境是ubuntu 14.10.下面就是步骤.&lt;/p&gt;

&lt;p&gt;下载GT-I9502 Kitkate 4.4.2的原厂升级包:可以从sammobile上下载&lt;/p&gt;

&lt;p&gt;下载驱动:可以从samsung的官网下载kies,里面就有驱动.&lt;/p&gt;

&lt;p&gt;下载chainfire的CF-AUTO-ROOT包.里面有为GT-I9502 4.4.2编译的版本.解开压缩文件,内含samsung的刷机程序odin&lt;/p&gt;

&lt;p&gt;安装ADB工具&lt;/p&gt;

&lt;p&gt;打开virtual box,使用xp的虚拟机,记住要选中usb下的EHCI. 可能需要安装virtualbox的extension包.&lt;/p&gt;

&lt;p&gt;启动虚拟机,安装KIES&lt;/p&gt;

&lt;p&gt;安装成功以后,发送CTRL-ALT-DEL给虚拟机,在task manager中关闭kietrayagent.exe这个程序,否则odin检测不到手机.&lt;/p&gt;

&lt;p&gt;将原厂升级包和CF-AUTO-ROOT包还有odin都拷入虚拟机的桌面.这一步很重要,否则odin会报一个韩文的错.&lt;/p&gt;

&lt;p&gt;启动odin,点击pda,选择原厂升级包，等待,直到odin有输出.&lt;/p&gt;

&lt;p&gt;将手机进入烧机模式( 关机后,同时按 volumn down + home + power,然后再按volumn up),插入usb线,odin就会发现一个串口.如果没有发现,在virtualbox中选择usb设备中的samsung.
点击odin中的start按扭,就可以了.&lt;/p&gt;

&lt;p&gt;手机从新启动后,再烧入CF-AUTO-ROOT包,手机重启两次后,开机就可以看到supersu这个程序,root就成功了.&lt;/p&gt;

&lt;p&gt;下面是安装gms程序:&lt;/p&gt;

&lt;p&gt;从手机system目录下删除不用的程序,释放空间来安装gms包&lt;/p&gt;

&lt;p&gt;下载gapps或pa_gapps包,然后将压缩包展开,将framework, priv-app, app, lib, etc相关目录中的东西手工拷贝到手机上的相关目录就可以了.&lt;/p&gt;

</description>
        <pubDate>Fri, 05 Dec 2014 00:00:00 +0800</pubDate>
        <link>http://wao.github.io/blog/2014/12/05/how-to-root-gt-i9502-kitkate.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2014/12/05/how-to-root-gt-i9502-kitkate.html</guid>
        
        <category>Android</category>
        
        <category>Root</category>
        
        
      </item>
    
  </channel>
</rss>
