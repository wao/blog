<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Think More</title>
    <description>Personal thoughts and work log in software development.
</description>
    <link>http://wao.github.io/blog/</link>
    <atom:link href="http://wao.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 27 Oct 2016 22:45:46 +0800</pubDate>
    <lastBuildDate>Thu, 27 Oct 2016 22:45:46 +0800</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>smali开发纪要1</title>
        <description>&lt;h2 id=&quot;command-to-execute-smali&quot;&gt;Command to execute smali&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    adb shell dalvikvm -cp /path/to/your/smali_compiled.zip YouClassName
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;compile-command&quot;&gt;Compile Command&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    java -jar smali.jar assemble -o classes.dex HelloWorld.smali
    zip YouZip.zip classes.dex
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;helloworld-sample-smaili-code&quot;&gt;HelloWorld sample smaili code&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-smali&quot;&gt;.class public LHelloWorld;
.super Ljava/lang/Object;
.method public static main([Ljava/lang/String;)V
    .locals 8
    .prologue
    sget-object v0, Ljava/lang/System;-&amp;gt;out:Ljava/io/PrintStream;
    const-string v1, &quot;Hello World!&quot;
    new-instance v2, Ljava/lang/StringBuilder;
    invoke-direct {v2, v1}, Ljava/lang/StringBuilder;-&amp;gt;&amp;lt;init&amp;gt;(Ljava/lang/String;)V
    const-string v1, &quot;Good Bye!&quot;
    invoke-virtual {v2, v1}, Ljava/lang/StringBuilder;-&amp;gt;append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     move-result-object v2
    invoke-virtual {v2}, Ljava/lang/StringBuilder;-&amp;gt;toString()Ljava/lang/String;
    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/io/PrintStream;-&amp;gt;println(Ljava/lang/String;)V
    return-void
.end method
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;code-sample-of-android-logv&quot;&gt;Code sample of android Log.v&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-smali&quot;&gt;.method public static varargs d(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
    .locals 11

    .prologue
    .line 296

    const-string v3, &quot;YANGCHEN:&quot;

    new-instance v6, Ljava/lang/StringBuilder;
    invoke-direct {v6,v3}, Ljava/lang/StringBuilder;-&amp;gt;&amp;lt;init&amp;gt;(Ljava/lang/String;)V

    .line 297
    if-nez p2, :cond_2
    invoke-virtual {v6,p1}, Ljava/lang/StringBuilder;-&amp;gt;append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    move-result-object v6

    :goto_0
    invoke-virtual {v6}, Ljava/lang/StringBuilder;-&amp;gt;toString()Ljava/lang/String;
    move-result-object v4


  invoke-static {p0, v4}, Landroid/util/Log;-&amp;gt;v(Ljava/lang/String;Ljava/lang/String;)I 
    return-void

    .line 297
    :cond_2
    invoke-static {p1, p2}, Ljava/lang/String;-&amp;gt;format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1
    invoke-virtual {v6,v1}, Ljava/lang/StringBuilder;-&amp;gt;append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    move-result-object v6
    goto :goto_0
.end method
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;变参函数最后一个参数是 Object[] 类型,可以直接传给String.format使用.&lt;/p&gt;
</description>
        <pubDate>Thu, 27 Oct 2016 22:34:05 +0800</pubDate>
        <link>http://wao.github.io/blog/2016/10/27/smali-tips-1.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2016/10/27/smali-tips-1.html</guid>
        
        <category>androiddev</category>
        
        
      </item>
    
      <item>
        <title>Node经验记录1</title>
        <description>&lt;h2 id=&quot;browserifyclientjs&quot;&gt;使用browserify来打包client端js&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;使用 browserify 的 &lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; 选项生成source map,有助于调试&lt;/li&gt;
  &lt;li&gt;使用 watchify 来自动调用browserify, 具体命令为 &lt;code class=&quot;highlighter-rouge&quot;&gt;watchify -d -o target.js source.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;使用 express的middleware browserify-middleware 动态自动打包js&lt;/li&gt;
  &lt;li&gt;与bootstrap兼容的jquery打包方法是&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;jquery&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;backbone&quot;&gt;backbone&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;collection的任意一个子model.save()都会激发collection的sync事件&lt;/li&gt;
  &lt;li&gt;model.save()会出PUT请求,同时要求返回更新后model的json&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;express&quot;&gt;express&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;res.json()用于发送json&lt;/li&gt;
  &lt;li&gt;req.params.xxx 用于获取参数&lt;/li&gt;
  &lt;li&gt;req.body用于获取传入的值&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 27 Oct 2016 22:30:16 +0800</pubDate>
        <link>http://wao.github.io/blog/2016/10/27/work-with-node-1.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2016/10/27/work-with-node-1.html</guid>
        
        <category>nodejs</category>
        
        
      </item>
    
      <item>
        <title>nodeunit初学记</title>
        <description>&lt;h2 id=&quot;orginize-test-case&quot;&gt;Orginize Test Case&lt;/h2&gt;

&lt;p&gt;nodeunit没有suite的概念,但是有group的概念.就是说nodeunit exports可以包含一个对象,这个对象也会被认为是一个递归的测试集合.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;anothertest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subtest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;./subtest&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;通过这个特性和require相结合就可以较好的组织测试.&lt;/p&gt;

&lt;h2 id=&quot;nodeunit&quot;&gt;nodeunit缺省目录&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;nodeunit&lt;/code&gt;命令如果没有参数的话就会寻找test目录下的js文件自动执行&lt;/p&gt;

&lt;h2 id=&quot;using-npm-test&quot;&gt;Using npm test&lt;/h2&gt;

&lt;p&gt;在文件package.json的scripts中添加 “test” : “nodeunit” 即可&lt;/p&gt;

&lt;h2 id=&quot;nodeunit-1&quot;&gt;nodeunit不立即退出的解决方法&lt;/h2&gt;

&lt;p&gt;nodeunit运行完全部测试后不会立即退出.根据&lt;a href=&quot;http://stackoverflow.com/questions/25769825/is-there-a-way-to-know-that-nodeunit-has-finished-all-tests&quot;&gt;stackoverflow的这篇文章&lt;/a&gt;可以添加一个最后执行的test来解决这个问题&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;anothertest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Put a *LAST* test to clear all if needed:&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//do_clear_all_things_if_needed();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// exit in 500 milli-seconds    &lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 24 Oct 2016 22:01:32 +0800</pubDate>
        <link>http://wao.github.io/blog/2016/10/24/get-start-with-nodeunit.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2016/10/24/get-start-with-nodeunit.html</guid>
        
        <category>nodejs</category>
        
        
      </item>
    
      <item>
        <title>关于javascript mvc framework的一些研究</title>
        <description>&lt;h2 id=&quot;javascript-mvc-framework&quot;&gt;关于javascript mvc framework的一些研究&lt;/h2&gt;

&lt;h3 id=&quot;twitter-bootstrap&quot;&gt;Twitter Bootstrap兼容&lt;/h3&gt;

&lt;p&gt;只有backbone可以完美兼容bootstrap,其他的ember.js, react.js都由于要操作dom会和bootstrap的jquery冲突.所以react.js和ember.js都有开源项目来复制bootstrap的功能.&lt;/p&gt;

&lt;p&gt;长远来看,还是由bootstrap直接支持virtual dom才能彻底解决这个问题.&lt;/p&gt;

&lt;h3 id=&quot;backbone-dead&quot;&gt;Backbone dead?&lt;/h3&gt;

&lt;p&gt;backbone.js的社区已经不活跃了,本身backbone.js的也停止增加新功能了.&lt;/p&gt;

&lt;h3 id=&quot;search-engine-and-backbonejs&quot;&gt;Search Engine and Backbone.js&lt;/h3&gt;

&lt;p&gt;backbone.js对搜索引擎不友好,可能需要server side backbone.js来解决这个问题.&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Oct 2016 21:26:33 +0800</pubDate>
        <link>http://wao.github.io/blog/2016/10/24/some-research-with-javascript-mvc-frameworks.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2016/10/24/some-research-with-javascript-mvc-frameworks.html</guid>
        
        <category>nodejs</category>
        
        
      </item>
    
      <item>
        <title>Using rvm script in ubuntu keyboard shortcuts</title>
        <description>&lt;p&gt;Recently, I try to using ubuntu keyboard shortcuts to launch my ruby scripts.&lt;/p&gt;

&lt;p&gt;Surprisingly, I found the script seemed hadn’t been excuted at all. After some research, I realize that the root cause is that I write ruby and run it with rvm.&lt;/p&gt;

&lt;p&gt;To use rvm, some code line needed to be added into &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt;. However, scripts launched by keybord shortcuts or &lt;code class=&quot;highlighter-rouge&quot;&gt;ALT+F2&lt;/code&gt; knows nothing about rvm. So your ruby script commonly failed due to require gem failures. For example, you use gem &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; and using &lt;code class=&quot;highlighter-rouge&quot;&gt;gem install main&lt;/code&gt; in console. This gem is installed in rvm managered gem path. However, ruby launched by keyboard shortcuts only run system ruby and don’t have gem &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; installed. To fix this problem, I found that &lt;code class=&quot;highlighter-rouge&quot;&gt;rvm wrapper&lt;/code&gt; can rescure us. I used following command &lt;code class=&quot;highlighter-rouge&quot;&gt;rvm wrapper 2.2.1@defrvm defrv&lt;/code&gt;. This command will create a &lt;code class=&quot;highlighter-rouge&quot;&gt;defrvm_ruby&lt;/code&gt; script. Then in keybord shutcuts using &lt;code class=&quot;highlighter-rouge&quot;&gt;path/to/defrvm_ruby path/to/your_script&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;path/to/your_script&lt;/code&gt;. Then script can correctly find its dependencies.&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Feb 2016 00:00:00 +0800</pubDate>
        <link>http://wao.github.io/blog/2016/02/02/using-rvm-in-ubuntu-keyboard-shortcut.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2016/02/02/using-rvm-in-ubuntu-keyboard-shortcut.html</guid>
        
        <category>ubuntu</category>
        
        <category>ruby</category>
        
        <category>rvm</category>
        
        
      </item>
    
      <item>
        <title>Find who sent SIGKILL to my process on Android?</title>
        <description>&lt;p&gt;Recently, I have to resolve a bug which I found my service is misteriously killed. No other clue, just a log line: “Process xxxxx died”.&lt;/p&gt;

&lt;h2 id=&quot;tombstone-and-debuggerd&quot;&gt;Tombstone and Debuggerd&lt;/h2&gt;

&lt;p&gt;First, I check the tombstones log and susperious to find nothing. After several digging in internet and source code of android, I found following fact:&lt;/p&gt;

&lt;p&gt;1, Tombstone log is generated by debuggered, nothing related to common core-dump of linux. After launching, debuggered listens to a unix-domain path.
2, From folloing post &lt;a href=&quot;http://t2koba.blogspot.com/2011/05/debuggerd-of-android.html&quot;&gt;debuggerd of Android&lt;/a&gt;, android uses a trick to let debuggered ptrace crashed app and dump tobmstones. The secrete is in file &lt;code class=&quot;highlighter-rouge&quot;&gt;bionic/linker/debugger.c&lt;/code&gt;. Function &lt;code class=&quot;highlighter-rouge&quot;&gt;debugger_init()&lt;/code&gt; will use sigaction to register handler to handle serval signal and notify debuggered in signal handler.&lt;/p&gt;

&lt;p&gt;From above facts, we can conclude following result:&lt;/p&gt;

&lt;p&gt;1, If some application register a new signal handler, without call prev signal handler, the tomestone dump function will be brokened.
2, Since SIGKILL can’t be handled by &lt;code class=&quot;highlighter-rouge&quot;&gt;signal_action&lt;/code&gt;, SIGKILL will never generate tombstone log.&lt;/p&gt;

&lt;p&gt;Now, I understand that my process is killed by SIGKILL.&lt;/p&gt;

&lt;h2 id=&quot;sigkill-in-kernel&quot;&gt;Sigkill in kernel&lt;/h2&gt;

&lt;p&gt;In linux kernel, in file &lt;code class=&quot;highlighter-rouge&quot;&gt;kernel/signal.c&lt;/code&gt;, function &lt;code class=&quot;highlighter-rouge&quot;&gt;send_signal&lt;/code&gt; is used to send signal from one process to another process. I add following code to dump log:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
       if( sig == 9 ){
        printk( KERN_ERR &quot;SIGKILL send from %d to %d&quot;, current-&amp;gt;pid, t-&amp;gt;pid );
        dump_stack();
    }
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;sigkill-in-android&quot;&gt;Sigkill in android&lt;/h2&gt;

&lt;p&gt;I also research in android, all the kill code finally call &lt;code class=&quot;highlighter-rouge&quot;&gt;android_os_killProcessGroup()&lt;/code&gt; to kill process.&lt;/p&gt;

&lt;p&gt;I also found, if android found that one binder is dead, it’ll send a SIGKILL to the process even if process is already killed. I was confused here for almost 3 days thought that my process is killed due to binder dead. Finally, from sigkill log in kernel, I found that my process is kill by a third-part library in my own process, and android send SIGKILL to my process later, which mislead me.&lt;/p&gt;
</description>
        <pubDate>Fri, 11 Dec 2015 18:36:29 +0800</pubDate>
        <link>http://wao.github.io/blog/2015/12/11/find-who-send-SIGKILL-to-my-process-in-android.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2015/12/11/find-who-send-SIGKILL-to-my-process-in-android.html</guid>
        
        <category>androiddev</category>
        
        
      </item>
    
      <item>
        <title>Install Ubuntu 15.10 in MSI GE62-2QD</title>
        <description>&lt;p&gt;Recently, I bought a new MSI GE62 2QD Notebook which has an Intel i7-5700HQ and an Nvdia GTX960M. At first day I got it, I had trouble to install Ubuntu 15.10 on it. I even can’t boot up from LiveCD and enter installer GUI. I googled it and found some blogs about old model or old ubuntu version. I tried their advice and has no effective. After some reseach, I realized that the problem is caused by new Nvidia GTX960M. It is obvious that linux default driver for nvdia card, nouveau has big problem with it. Luckly, all the Intel platform notebook has an embed Intel Display card which Ubuntu support quite perfect. All I need to to is disable nouveau before LiveCD bootup.&lt;/p&gt;

&lt;p&gt;Following the advice of &lt;a href=&quot;http://forums.debian.net/viewtopic.php?t=79797&quot;&gt;this article&lt;/a&gt;, I can launcher intaller and install Ubuntu 15.10. The following same procdure at my Ubuntu first boot phase and successfully boot system.&lt;/p&gt;

&lt;p&gt;After that, modify file &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/default/grub&lt;/code&gt;, change line&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    GRUB_CMDLINE_LINUX=&quot;&quot; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    GRUB_CMDLINE_LINUX=&quot;nouveau.modeset=0&quot; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and run command&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    sudo update-grub
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After that, I can enjoy my new notebook.&lt;/p&gt;

&lt;p&gt;FYI, the method to disable nouveau is following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;At the grub screen, press the up or down arrow keys to select the grub stanza/entry in question.&lt;/li&gt;
  &lt;li&gt;Press the “E” key.&lt;/li&gt;
  &lt;li&gt;An editor will open up that will allow you to temporarily change the grub options for the next boot.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Press the down arrow key and move the cursor to the line after the line with the kernel options. The line with the kernel options might look something like:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; linux   /boot/vmlinuz-3.2.0-2-486 root=UUID=1cfa3078-b27d-471a-a476-e948f947f058 ro  quiet
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Press the left/right arrow keys to position the cursor at the end of kernel options line.&lt;/li&gt;
  &lt;li&gt;Type in &lt;code class=&quot;highlighter-rouge&quot;&gt;nouveau.modeset=0&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Press either the F10 key or Ctrl+X to start the boot process.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 11 Dec 2015 18:36:29 +0800</pubDate>
        <link>http://wao.github.io/blog/2015/12/11/install-ubuntu-15.10-in-MSI-GE62-2QD.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2015/12/11/install-ubuntu-15.10-in-MSI-GE62-2QD.html</guid>
        
        <category>Ubuntu</category>
        
        
      </item>
    
      <item>
        <title>Paring Raboo Blueooth Mouse with Ubuntu 15.10</title>
        <description>&lt;p&gt;Yesterday, I purchased a Rapoo Bluetooth Mouse 6010B and tried to work with my Ubuntu 15.10. Sadly, it can be paried, but ubuntu told me “Connection failed”. As a programmer knowning little about bluetooth, I used &lt;code class=&quot;highlighter-rouge&quot;&gt;hcidump&lt;/code&gt; to capture a log and found nothing. Ubuntu seems pair with mouse successful and after a bunch of SDP negotitation, disconnect with mouse with no obvious reason.&lt;/p&gt;

&lt;p&gt;After that, I tried the mouse with my android phone, everything works perfect.&lt;/p&gt;

&lt;p&gt;After Google a lot, someone mentions Ubuntu 15.10 has some problem of bluetooth with its Bluetooth GUI, suggests that command line may work. So I tried &lt;code class=&quot;highlighter-rouge&quot;&gt;bluetoothctl&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
scan on
#Found the mac with your mouse here
scan off
pair 00:11:xx:xx  #Pair with your mouse
connect 00:11:xx:xx 
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Everything goes OK. After that, I tried powerdown/poweron bluetooth mouse, everythings is ok.&lt;/p&gt;

</description>
        <pubDate>Fri, 11 Dec 2015 18:36:29 +0800</pubDate>
        <link>http://wao.github.io/blog/2015/12/11/Paring-Rabool-bluetooth-mouse-with-Ubuntu-15.10.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2015/12/11/Paring-Rabool-bluetooth-mouse-with-Ubuntu-15.10.html</guid>
        
        <category>Bluetooth</category>
        
        <category>Ubuntu</category>
        
        
      </item>
    
      <item>
        <title>Using long with std::inner_product</title>
        <description>&lt;p&gt;Today, I have write a problem which using &lt;code class=&quot;highlighter-rouge&quot;&gt;std::inner_product&lt;/code&gt; to caculate inner product of two &lt;code class=&quot;highlighter-rouge&quot;&gt;std::vector&amp;lt;int&amp;gt;&lt;/code&gt;. The code is like followings:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int msp( vector&amp;lt;int&amp;gt;&amp;amp; left, vector&amp;lt;int&amp;gt;&amp;amp; right )
    return inner_product( left.begin(), left.end(), right.begin(), 0 );
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;However, I meet overflow problem. I have tried to change from &lt;code class=&quot;highlighter-rouge&quot;&gt;std::vector&amp;lt;int&amp;gt;&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;std::vector&amp;lt;long long int&amp;gt;&lt;/code&gt;, but it doesn’t work.&lt;/p&gt;

&lt;p&gt;After several trials, I have found if I change 0 to &lt;code class=&quot;highlighter-rouge&quot;&gt;0L&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;0LL&lt;/code&gt;, the overflow problem is fixed. I have do some research, and, found that the prototype of &lt;code class=&quot;highlighter-rouge&quot;&gt;inner_product&lt;/code&gt; is like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;template&amp;lt; class InputIt1, class InputIt2, class T &amp;gt;
T inner_product( InputIt1 first1, InputIt1 last1, InputIt2 first2, T value );
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see, the type T is determined by type of parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt;, so to force &lt;code class=&quot;highlighter-rouge&quot;&gt;inner_product&lt;/code&gt; using &lt;code class=&quot;highlighter-rouge&quot;&gt;long&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;long long int&lt;/code&gt;, we must specify that type of value by using &lt;code class=&quot;highlighter-rouge&quot;&gt;0L&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;0LL&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;return inner_product( left.begin(), left.end(), right.begin(), 0LL );
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 18 Mar 2015 18:36:29 +0800</pubDate>
        <link>http://wao.github.io/blog/2015/03/18/Using-long-with-std-inner-product.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2015/03/18/Using-long-with-std-inner-product.html</guid>
        
        <category>C++</category>
        
        
      </item>
    
      <item>
        <title>Using androidannotation with M2E</title>
        <description>&lt;p&gt;Install ADT&lt;/p&gt;

&lt;p&gt;Install m2e-android: Android for Maven Eclipse Update Site:	http://rgladwell.github.io/m2e-android/updates/	
It will also install m2e itself.&lt;/p&gt;

&lt;p&gt;Install mvn-apt: Maven Integration for Eclipse JDT APT:	http://download.jboss.org/jbosstools/updates/m2e-extensions/m2e-apt&lt;/p&gt;

&lt;p&gt;Create a maven android project.&lt;/p&gt;

&lt;p&gt;Add following dependencies:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.androidannotations&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;androidannotations&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;3.2&amp;lt;/version&amp;gt;
    &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;org.androidannotations&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;androidannotations-api&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;3.2&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And add following in build/pluginManager&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;     &amp;lt;plugin&amp;gt;
        &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;3.1&amp;lt;/version&amp;gt;
        &amp;lt;configuration&amp;gt;
            &amp;lt;source&amp;gt;1.6&amp;lt;/source&amp;gt;
            &amp;lt;target&amp;gt;1.6&amp;lt;/target&amp;gt;
        &amp;lt;/configuration&amp;gt;
    &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Configure mvn-apt: Using delegated to mvn-processor-plugin. It is important, since default eclipse apt process is broken with m2e.&lt;/p&gt;

</description>
        <pubDate>Tue, 16 Dec 2014 00:00:00 +0800</pubDate>
        <link>http://wao.github.io/blog/2014/12/16/using-androidannotations-with-m2e.html</link>
        <guid isPermaLink="true">http://wao.github.io/blog/2014/12/16/using-androidannotations-with-m2e.html</guid>
        
        <category>Android</category>
        
        <category>Maven</category>
        
        
      </item>
    
  </channel>
</rss>
